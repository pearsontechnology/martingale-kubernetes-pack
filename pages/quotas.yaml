$type: DataViewPage
props:
  title:
    $map: '`${params.namespace} - Resource Quotas`'
  url:
    $map: |
      `${config.host}/api/v1/namespaces/${params.namespace}/resourcequotas`
  headers:
    $map: config.headers
  root: items
  mapper:
    $mapper: |-
      props.map((ds)=>{
        const md = ds.metadata;
        const spec = ds.spec;
        const status = ds.status;
        return {
          baseLink: params.env?`/kubernetes/${params.env}`:'/kubernetes',
          name: md.name,
          namespace: md.namespace,
          created: md.creationTimestamp,
          persistentVolumeClaims: `${status.used.persistentvolumeclaims} of ${spec.hard.persistentvolumeclaims}`,
          pods: `${status.used.pods} of ${spec.hard.pods}`,
          secrets: `${status.used.secrets} of ${spec.hard.secrets}`,
          replicationControllers: `${status.used.replicationcontrollers} of ${spec.hard.replicationcontrollers}`,
          services: `${status.used.services} of ${spec.hard.services}`
          /*
          persistentVolumeClaimsLimit: spec.hard.persistentvolumeclaims,
          podsLimit: spec.hard.pods,
          replicationControllersLimit: spec.hard.replicationcontrollers,
          secretsLimit: spec.hard.secrets,
          servicesLimit: spec.hard.services,
          persistentVolumeClaimsUsed: status.used.persistentvolumeclaims,
          podsUsed: status.used.pods,
          replicationControllersUsed: status.used.replicationcontrollers,
          secretsUsed: status.used.secrets,
          servicesUsed: status.used.services,
          */
        };
      })
  suppress:
    - baseLink
  actions:
    - link:
        $mapper: >-
          `${props.baseLink}/namespace/${params.namespace}/resourcequotas/${props.name}${extractQueryParams(['apiBase'])}`
      caption: Details
      btnStyle: primary
paths:
  - /kubernetes/namespace/:namespace/resourcequotas
  - /kubernetes/:env/namespace/:namespace/resourcequotas
