description: Shows a listing of the pods available within a namespace.
paths:
  - /kube/:namespace/pods
  - /kube/:env/:namespace/pods
$type: HeaderPage
props:
  title: Namespaces
children:
  $type: Panel
  children:
    $type: Provider
    props:
      Component:
        $component: ActionTable
      props:
        suppress:
          - baseLink
        actions:
          - link: ${baseLink}/${namespace}/${name}/logs
            caption: Logs
            btnStyle: primary
            items:
            - link: ${baseLink}/${namespace}/${name}/details
              caption: Details
              btnStyle: default
          - delete: ${baseLink}/api/v1/namespaces/${namespace}/pods/${name}
            caption: Refresh
            message: Are you sure you want to refresh ${name}?
      provide:
        data:
          root: items
          url:
            $map: params.env?`/api/${params.env}/kube/api/v1/namespaces/${params.namespace}/pods`:'/api/kube/api/v1/namespaces/${params.namespace}/pods'
          mapper:
            $mapper: |
              props.map((pod)=>{
                const running = getObjectValue('status.containerStatuses[0].state.running', pod);
                return {
                  baseLink: params.env?`/kube/${params.env}`:'/kube',
                  name: getObjectValue('metadata.name', pod),
                  node: getObjectValue('spec.nodeName', pod),
                  namespace: getObjectValue('metadata.namespace', pod),
                  created: getObjectValue('metadata.creationTimestamp', pod),
                  phase: getObjectValue('status.phase', pod),
                  status: running?getObjectValue('status.phase', pod):getObjectValue('status.containerStatuses[0].state.waiting.reason', pod, 'unknown'),
                  restartCount: getObjectValue('status.containerStatuses[0].restartCount', pod, '0'),
                  podIp: getObjectValue('status.podIP', pod),
                  started: getObjectValue('startedAt', running)
                };
              })
